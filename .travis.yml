language: minimal

geosx_osx_build: &geosx_osx_build
  stage: build
  os: osx
  osx_image: xcode10.2
  install:
  # it is not immediate to get the version of open-mpi we want.
  # We use the specific revision of the openmpi 4.0.2 upgrade.
  # (The revision is identified through its git commit hash.)
  - BREW_HASH=1e1370e0fddf2970695ab2e3b12ed5f24eb71819
  - BREW_URL=https://raw.github.com/Homebrew/homebrew-core/${BREW_HASH}
  - brew install ${BREW_URL}/Formula/open-mpi.rb > /dev/null 2>&1
  - brew install ${BREW_URL}/Formula/git-lfs.rb > /dev/null 2>&1
  before_script:
  - git lfs install
  - git lfs pull
  script:
  - python scripts/config-build.py -hc ${TRAVIS_BUILD_DIR}/host-configs/darwin-clang.cmake -bt Release -DNUM_PROC=2 -DENABLE_CALIPER:BOOL=OFF
  - cd build-darwin-clang-release
  - make
  before_deploy:
  - pip install -q google-cloud-storage
  - cd ${TRAVIS_BUILD_DIR}
  - openssl aes-256-cbc -K $encrypted_5ac030ea614b_key -iv $encrypted_5ac030ea614b_iv -in geosx-key.json.enc -out geosx-key.json -d
  deploy:
    provider: script
    script: python macosx_TPL_mngt.py install-darwin-clang-release geosx-key.json ${BREW_HASH}
    on:
      all_branches: true
    skip_cleanup: true

geosx_linux_build: &geosx_linux_build
  stage: build
  os: linux
  services: docker
  # The deployment will push a DOCKER_IMG:DOCKER_TAG image.
  # These variables shall be defined by the "yaml derived classes".
  before_deploy:
  - echo "$TOTOGAZ_DOCKER_PASSWORD" | docker login -u "$TOTOGAZ_DOCKER_USERNAME" --password-stdin
  deploy: # Note that https://github.com/travis-ci/dpl/pull/1068 prevents to use multiple command lines, this is mainly why we use before_deploy.
    provider: script
    script: docker push ${DOCKER_IMG}:${DOCKER_TAG}
    on:
      all_branches: true
    skip_cleanup: true

geosx_ubuntu_build: &geosx_ubuntu_build
  # The ubuntu_build relies on the GCC_MAJOR_VERSION env variable to select the compiler version.
  # It's the role of the so-called "yaml derived class" to define it.
  <<: *geosx_linux_build
  before_script:
    # We save memory for the docker context
  - echo .git > .dockerignore
  - echo "**/*.rpm" >> .dockerignore
  script:
    # Remove this (and the deployment script) in favour of https://github.com/travis-ci/dpl/pull/1091 when intergated.
  - DOCKER_IMG=totogaz/ubuntu18.04-gcc${GCC_MAJOR_VERSION}
  #- DOCKER_TAG=gcc${GCC_MAJOR_VERSION}-ubuntu18-$(date +%F)
  - DOCKER_TAG=${TRAVIS_BUILD_NUMBER}
  - docker build --build-arg GCC_MAJOR_VERSION=${GCC_MAJOR_VERSION} --tag ${DOCKER_IMG}:${DOCKER_TAG} -f docker/gcc-ubuntu1804/Dockerfile .

geosx_centos_build: &geosx_centos_build
  <<: *geosx_linux_build
  before_script:
    # This .dockerignore can be slightly improved for rpms
  - echo .git > .dockerignore
  script:
    # Remove this in favour of https://github.com/travis-ci/dpl/pull/1091 when intergated.
  - DOCKER_IMG=totogaz/centos7.5.1804-clang${CLANG_VERSION}
  #- DOCKER_TAG=gcc${GCC_MAJOR_VERSION}-ubuntu18-$(date +%F)
  - DOCKER_TAG=${TRAVIS_BUILD_NUMBER}
  - docker build --build-arg CLANG_VERSION=${CLANG_VERSION} --tag ${DOCKER_IMG}:${DOCKER_TAG} -f docker/clang-LC-toss3/Dockerfile .

jobs:
  include:
  - <<: *geosx_osx_build
  - <<: *geosx_centos_build
    env: CLANG_VERSION=6.0.1
  - <<: *geosx_centos_build
    env: CLANG_VERSION=7.0.0
  - <<: *geosx_ubuntu_build
    env: GCC_MAJOR_VERSION=7
  - <<: *geosx_ubuntu_build
    env: GCC_MAJOR_VERSION=8
