language: cpp
linuxBuild:
  stage: build
  os: linux
  dist: bionic
  services: docker
  sudo: required
  install: &1
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu
    $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - cd ${TRAVIS_BUILD_DIR}
  - cd ..
  - cp ${TRAVIS_BUILD_DIR}/docker/$IMG/* .
  script: &2
  - DOCKER_TAG=geosx/compiler:$IMG-"$(date +%F)"
  - echo $DOCKER_TAG
  - docker build --build-arg GEOSXCI_GITHUB_PAT=${GEOSXCI_GITHUB_PAT} --build-arg
    TRAVIS_COMMIT=${TRAVIS_COMMIT} --tag $DOCKER_TAG .
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push $DOCKER_TAG
linuxDeploy:
  stage: deploy
  script: 
stages:
- build
jobs:
  include:
  - stage: build
    os: osx
    osx_image: xcode10.2
    before_script:
    - brew install jq > /dev/null 2>&1
    - brew install openmpi > /dev/null 2>&1
    - brew install git-lfs > /dev/null 2>&1
    - git lfs install
    - git lfs pull
    script:
    - jq ".type" geosx-key.json
    - python ${TRAVIS_BUILD_DIR}/scripts/config-build.py -hc ${TRAVIS_BUILD_DIR}/host-configs/darwin-clang.cmake
      -bt Release -DNUM_PROC=2 -DENABLE_CALIPER:BOOL=OFF
    - cd build-darwin-clang-release
    - make
  - stage: deploy
    script:
    - echo DEPLOY OSX
  - stage: build
    os: linux
    dist: bionic
    services: docker
    sudo: required
    install: *1
    script: *2
    compiler: gcc7-ubuntu18
    env:
    - IMG=gcc7-ubuntu18
    - CMAKE_BUILD_TYPE=Release
  - stage: build
    os: linux
    dist: bionic
    services: docker
    sudo: required
    install: *1
    script: *2
    compiler: gcc8-ubuntu18
    env:
    - IMG=gcc8-ubuntu18
    - CMAKE_BUILD_TYPE=Release
  - stage: build
    os: linux
    dist: bionic
    services: docker
    sudo: required
    install: *1
    script: *2
    compiler: clang6-LC-toss3
    env:
    - IMG=clang6-LC-toss3
    - CMAKE_BUILD_TYPE=Release
  - stage: build
    os: linux
    dist: bionic
    services: docker
    sudo: required
    install: *1
    script: *2
    compiler: clang7-LC-toss3
    env:
    - IMG=clang7-LC-toss3
    - CMAKE_BUILD_TYPE=Release
before_install:
- openssl aes-256-cbc -K $encrypted_5ac030ea614b_key -iv $encrypted_5ac030ea614b_iv -in geosx-key.json.enc -out geosx-key.json -d
