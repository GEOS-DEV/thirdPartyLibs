language: cpp

linuxBuild: &linuxBuild
  stage: build
  os: linux
  dist: bionic
  services: docker
  sudo: required
  install:
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    - sudo apt-get update
    - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
    - cd ${TRAVIS_BUILD_DIR}
    - cd ..
    - cp ${TRAVIS_BUILD_DIR}/docker/$IMG/* .
  script: 
    - DOCKER_TAG=geosx/compiler:$IMG-"$(date +%F)"
    - echo $DOCKER_TAG
    - docker build --build-arg GEOSXCI_GITHUB_PAT=${GEOSXCI_GITHUB_PAT} --build-arg TRAVIS_COMMIT=${TRAVIS_COMMIT} --tag $DOCKER_TAG .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $DOCKER_TAG
stages:
  - build
jobs:
  include:
    - stage: build
      os: osx
      osx_image: xcode10.2
      before_script:
        # Brew being some kind of a rolling release distribution,
        # it is not immediate to get the version of open-mpi we want.
        # We use the specific revision of the openmpi 4.0.2 upgrade.
        # (The revision is identified through its git commit hash.)
        - BREW_HASH=1e1370e0fddf2970695ab2e3b12ed5f24eb71819
        - BREW_URL=https://raw.github.com/Homebrew/homebrew-core/${BREW_HASH}
        - brew install ${BREW_URL}/Formula/open-mpi.rb > /dev/null 2>&1
        - brew install ${BREW_URL}/Formula/git-lfs.rb > /dev/null 2>&1
        - git lfs install
        - git lfs pull
        - pip install -q google-cloud-storage
      script:
        - python ${TRAVIS_BUILD_DIR}/scripts/config-build.py -hc ${TRAVIS_BUILD_DIR}/host-configs/darwin-clang.cmake -bt Release -DNUM_PROC=2 -DENABLE_CALIPER:BOOL=OFF
        - cd ${TRAVIS_BUILD_DIR}/build-darwin-clang-release
        - make
        - cd ${TRAVIS_BUILD_DIR}
          # We store the brew hash alongside the TPL so the client (i.e. GEOSX) may have a consistent installation.
          # You shall modify the file name and position carefuly since the client code relies
          # on this information to extract the hash.
        - echo -n ${BREW_HASH} > install-darwin-clang-release/brew_hash.txt
        - python macosx_TPL_mngt.py install-darwin-clang-release geosx-key.json
    - <<: *linuxBuild
      compiler: gcc7-ubuntu18
      env:
        - IMG=gcc7-ubuntu18
        - CMAKE_BUILD_TYPE=Release
    - <<: *linuxBuild    
      compiler: gcc8-ubuntu18
      env:
        - IMG=gcc8-ubuntu18
        - CMAKE_BUILD_TYPE=Release
    - <<: *linuxBuild
      compiler: clang6-LC-toss3
      env:
        - IMG=clang6-LC-toss3
        - CMAKE_BUILD_TYPE=Release
    - <<: *linuxBuild
      compiler: clang7-LC-toss3
      env:
        - IMG=clang7-LC-toss3  
        - CMAKE_BUILD_TYPE=Release
before_install:
  - openssl aes-256-cbc -K $encrypted_5ac030ea614b_key -iv $encrypted_5ac030ea614b_iv -in geosx-key.json.enc -out geosx-key.json -d
 