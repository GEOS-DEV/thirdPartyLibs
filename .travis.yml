language: minimal
vm:
  size: large

geosx_linux_build: &geosx_linux_build
  stage: build
  os: linux
  dist: focal
  services: docker
  script:
  # We save memory for the docker context
  - echo .git > .dockerignore
  # This script will build and push a DOCKER_REPOSITORY:DOCKER_TAG image build from DOCKERFILE
  # with (optional) DOCKER_COMPILER_BUILD_ARG build arguments.
  # A specific host-config file can be defined through variable HOST_CONFIG.
  # For the case of Total cluster only, DOCKER_ROOT_IMAGE is used to define docker base image.
  # Where the TPL are installed in the docker can be specified by parameter INSTALL_DIR.
  # Unlike DOCKER_TAG, these variables shall be defined by the "yaml derived classes" in a stage prior to `script` stage.
  - DOCKER_TAG=${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}
  - echo "${DOCKER_USERNAME}"
  - echo "${DOCKER_REPOSITORY}:${DOCKER_TAG}"
  - docker build ${DOCKER_COMPILER_BUILD_ARG}
    --build-arg HOST_CONFIG=${HOST_CONFIG:-host-configs/environment.cmake}
    --build-arg DOCKER_ROOT_IMAGE=${DOCKER_ROOT_IMAGE:-undefined}
    --build-arg INSTALL_DIR=${INSTALL_DIR:-/opt/GEOSX_TPL}
    --tag ${DOCKER_REPOSITORY}:${DOCKER_TAG}
    --file ${DOCKERFILE}
    --label "org.opencontainers.image.created=$(date --rfc-3339=seconds)"
    --label "org.opencontainers.image.source=https://github.com/GEOSX/thirdPartyLibs"    
    --label "org.opencontainers.image.revision=${TRAVIS_COMMIT}"
    --label "org.opencontainers.image.title=Building environment for GEOSX"
    .
  # The deployment phase is done here because the `deploy` stage of travis does not work for PR.
  # And `after_success` does not fail the build in case of error.
  - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
  - docker push ${DOCKER_REPOSITORY}:${DOCKER_TAG}

jobs:
  include:
  - name: Pangea 2 (centos 7.6, gcc 8.3.0, open-mpi 2.1.5, mkl 2019.3)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/pangea2-gcc8.3.0-openmpi2.1.5-mkl2019.3
    - DOCKERFILE=docker/TotalEnergies/Dockerfile
    - DOCKER_ROOT_IMAGE=totogaz/pangea2-gcc8.3.0-openmpi2.1.5-mkl2019.3-no-geosx:0.0.1
    - INSTALL_DIR=/workrd/SCR/GEOSX/install/gcc8/GEOSX_TPL-${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT:0:7}
  - name: Pecan GPU (centos 7.7, gcc 8.2.0, open-mpi 4.0.1, mkl 2019.5, cuda 11.5.119)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/pecan-gpu-gcc8.2.0-openmpi4.0.1-mkl2019.5-cuda11.5.119
    - DOCKERFILE=docker/TotalEnergies/Dockerfile
    - DOCKER_ROOT_IMAGE=totogaz/pecan-gcc8.2.0-openmpi4.0.1-mkl2019.5-cuda11.5.119-no-geosx:0.0.1
    - HOST_CONFIG=docker/TotalEnergies/pecan-GPU.cmake
    - INSTALL_DIR=/data/gpfs/Users/j0436735/travis-deployments/GPU/GEOSX_TPL-${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT:0:7}
  - name: Pecan CPU (centos 7.7, gcc 8.2.0, open-mpi 4.0.1, mkl 2019.5)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/pecan-cpu-gcc8.2.0-openmpi4.0.1-mkl2019.5
    - DOCKERFILE=docker/TotalEnergies/Dockerfile
    - DOCKER_ROOT_IMAGE=totogaz/pecan-gcc8.2.0-openmpi4.0.1-mkl2019.5-cuda11.5.119-no-geosx:0.0.1
    - HOST_CONFIG=docker/TotalEnergies/pecan-CPU.cmake
    - INSTALL_DIR=/data/gpfs/Users/j0436735/travis-deployments/CPU/GEOSX_TPL-${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT:0:7}
  - name: Sherlock CPU (centos 7.9.2009, gcc 10.1.0, open-mpi 4.1.2, openblas 0.3.10, zlib 1.2.11)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/sherlock-gcc10.1.0-openmpi4.1.2-openblas0.3.10-zlib1.2.11
    - DOCKERFILE=docker/Stanford/Dockerfile
    - DOCKER_ROOT_IMAGE=jafranc/sherlock-gcc10.1.0-openmpi4.1.2-cuda11.5.0-openblas0.3.10-zlib1.2.11-no-geosx:0.0.1
    - HOST_CONFIG=docker/Stanford/sherlock-gcc10-ompi4.1.2-openblas0.3.10.cmake
    - INSTALL_DIR=/oak/stanford/schools/ees/COLLABORATIONS/geosx/CPU/GEOSX_TPL-${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT:0:7}
  - name: Sherlock GPU (centos 7.9.2009, gcc 10.1.0, open-mpi 4.1.2, cuda 11.5.0, openblas 0.3.10, zlib 1.2.11)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/sherlock-gcc10.1.0-openmpi4.1.2-cuda11.5.0-openblas0.3.10-zlib1.2.11
    - DOCKERFILE=docker/Stanford/Dockerfile
    - DOCKER_ROOT_IMAGE=jafranc/sherlock-gcc10.1.0-openmpi4.1.2-cuda11.5.0-openblas0.3.10-zlib1.2.11-no-geosx:0.0.1
    - HOST_CONFIG=docker/Stanford/sherlock-gcc10-ompi4.1.2-openblas0.3.10-cuda11.5.0-sm80.cmake
    - INSTALL_DIR=/oak/stanford/schools/ees/COLLABORATIONS/geosx/GPU/GEOSX_TPL-${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT:0:7}
  - name: Ubuntu (20.04, gcc 9.3.0, open-mpi 4.0.3)
    <<: *geosx_linux_build
    before_script:
    - GCC_MAJOR_VERSION=9
    - DOCKER_REPOSITORY=geosx/ubuntu20.04-gcc${GCC_MAJOR_VERSION}
    - DOCKERFILE=docker/gcc-ubuntu/Dockerfile
    - DOCKER_ROOT_IMAGE=ubuntu:20.04
    - DOCKER_COMPILER_BUILD_ARG="--build-arg GCC_MAJOR_VERSION=${GCC_MAJOR_VERSION}"
  - name: Ubuntu (20.04, gcc 10.3.0, open-mpi 4.0.3) - github codespaces
    <<: *geosx_linux_build
    before_script:
    # This docker root image brings the components to use github's codespaces feature.
    - DOCKER_ROOT_IMAGE=mcr.microsoft.com/vscode/devcontainers/base:ubuntu-20.04
    - GCC_MAJOR_VERSION=10
    - DOCKER_REPOSITORY=geosx/ubuntu20.04-gcc${GCC_MAJOR_VERSION}
    - DOCKERFILE=docker/gcc-ubuntu/Dockerfile
    - DOCKER_COMPILER_BUILD_ARG="--build-arg GCC_MAJOR_VERSION=${GCC_MAJOR_VERSION}"
  - name: Ubuntu (22.04, gcc 11.2.0, open-mpi 4.1.2)
    <<: *geosx_linux_build
    before_script:
    - DOCKER_ROOT_IMAGE=ubuntu:22.04
    - GCC_MAJOR_VERSION=11
    - DOCKER_REPOSITORY=geosx/ubuntu22.04-gcc${GCC_MAJOR_VERSION}
    - DOCKERFILE=docker/gcc-ubuntu/Dockerfile
    - DOCKER_COMPILER_BUILD_ARG="--build-arg GCC_MAJOR_VERSION=${GCC_MAJOR_VERSION}"
    - INSTALL_DIR=/opt/GEOSX/GEOSX_TPL-${TRAVIS_PULL_REQUEST}-${TRAVIS_BUILD_NUMBER}-${TRAVIS_COMMIT:0:7}
  - name: Ubuntu (20.04, clang 10.0.0 + gcc 9.4.0, open-mpi 4.0.3, cuda-11.2.152)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/ubuntu20.04-clang10.0.0-cuda11.2.152
    - DOCKERFILE=docker/clang-cuda/Dockerfile
  - name: Centos (7.7, gcc 8.3.1, open-mpi 1.10.7, cuda 11.8.0)
    <<: *geosx_linux_build
    env:
    - DOCKER_REPOSITORY=geosx/centos7.7-gcc8.3.1-cuda11.8.0
    - DOCKERFILE=docker/gcc-cuda/Dockerfile
