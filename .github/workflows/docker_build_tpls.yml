name: Docker Build TPLs

on: push
#  pull_request:
#    branches: [ "master" ]

# Cancels in-progress workflows for a PR when updated
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_images:
    name: ${{ matrix.name }}

    runs-on: ${{ matrix.os }}

    #TODO: Change DOCKER_REPOSITORY root back to "geosx"
    strategy:

      # In-progress jobs will not be cancelled if there is a failure
      fail-fast : false

      matrix:
        include:
          - name: Pangea 2 (centos 7.6, gcc 8.3.0, open-mpi 2.1.5, mkl 2019.3)
            DOCKER_REPOSITORY: han12/pangea2-gcc8.3.0-openmpi2.1.5-mkl2019.3
            DOCKERFILE: docker/TotalEnergies/Dockerfile
            DOCKER_ROOT_IMAGE: totogaz/pangea2-gcc8.3.0-openmpi2.1.5-mkl2019.3-no-geosx:0.0.1
            INSTALL_DIR: /workrd/SCR/GEOSX/install/gcc8/GEOSX_TPL-${{ github.event.number }}-${{github.run_number}}-${{ github.sha }}
            OS: ubuntu-22.04
          - name: Pecan GPU (centos 7.7, gcc 8.2.0, open-mpi 4.0.1, mkl 2019.5, cuda 10.2.89p2)
            DOCKER_REPOSITORY: han12/pecan-gpu-gcc8.2.0-openmpi4.0.1-mkl2019.5-cuda10.2.89p2
            DOCKERFILE: docker/TotalEnergies/Dockerfile
            DOCKER_ROOT_IMAGE: totogaz/pecan-gcc8.2.0-openmpi4.0.1-mkl2019.5-cuda10.2.89p2-no-geosx:0.0.1
            HOST_CONFIG: docker/TotalEnergies/pecan-GPU.cmake
            INSTALL_DIR: /data/gpfs/Users/j0436735/travis-deployments/GPU/GEOSX_TPL-${{ github.event.number }}-${{github.run_number}}-${{ github.sha }}
            OS: ubuntu-22.04
          - name: Pecan CPU (centos 7.7, gcc 8.2.0, open-mpi 4.0.1, mkl 2019.5)
            DOCKER_REPOSITORY: han12/pecan-cpu-gcc8.2.0-openmpi4.0.1-mkl2019.5
            DOCKERFILE: docker/TotalEnergies/Dockerfile
            DOCKER_ROOT_IMAGE: totogaz/pecan-gcc8.2.0-openmpi4.0.1-mkl2019.5-cuda10.2.89p2-no-geosx:0.0.1
            HOST_CONFIG: docker/TotalEnergies/pecan-CPU.cmake
            INSTALL_DIR: /data/gpfs/Users/j0436735/travis-deployments/CPU/GEOSX_TPL-${{ github.event.number }}-${{github.run_number}}-${{ github.sha }}
            OS: ubuntu-22.04
          - name: Sherlock CPU (centos 7.9.2009, gcc 10.1.0, open-mpi 4.1.2, openblas 0.3.10, zlib 1.2.11)
            DOCKER_REPOSITORY: han12/sherlock-gcc10.1.0-openmpi4.1.2-openblas0.3.10-zlib1.2.11
            DOCKERFILE=: docker/Stanford/Dockerfile
            DOCKER_ROOT_IMAGE: jafranc/sherlock-gcc10.1.0-openmpi4.1.2-cuda11.5.0-openblas0.3.10-zlib1.2.11-no-geosx:0.0.1
            HOST_CONFIG: docker/Stanford/sherlock-gcc10-ompi4.1.2-openblas0.3.10.cmake
            INSTALL_DIR: /home/groups/tchelepi/geosx-sherlock/CPU/GEOSX_TPL-${{ github.event.number }}-${{github.run_number}}-${{ github.sha }}
            OS: ubuntu-22.04
          - name: Sherlock GPU (centos 7.9.2009, gcc 10.1.0, open-mpi 4.1.2, cuda 11.5.0, openblas 0.3.10, zlib 1.2.11)
            DOCKER_REPOSITORY: han12/sherlock-gcc10.1.0-openmpi4.1.2-cuda11.5.0-openblas0.3.10-zlib1.2.11
            DOCKERFILE: docker/Stanford/Dockerfile
            DOCKER_ROOT_IMAGE: jafranc/sherlock-gcc10.1.0-openmpi4.1.2-cuda11.5.0-openblas0.3.10-zlib1.2.11-no-geosx:0.0.1
            HOST_CONFIG: docker/Stanford/sherlock-gcc10-ompi4.1.2-openblas0.3.10-cuda11.5.0-sm80.cmake
            INSTALL_DIR: /home/groups/tchelepi/geosx-sherlock/GPU/GEOSX_TPL-${{ github.event.number }}-${{github.run_number}}-${{ github.sha }}
            OS: ubuntu-22.04
          - name: Mac OSX
            OS: macos-12
          - name: Ubuntu (20.04, gcc 9.3.0, open-mpi 4.0.3)
            DOCKER_REPOSITORY: han12/ubuntu20.04-gcc9
            DOCKERFILE: docker/gcc-ubuntu/Dockerfile
            DOCKER_ROOT_IMAGE: ubuntu:20.04
            DOCKER_COMPILER_BUILD_ARG: "--build-arg GCC_MAJOR_VERSION=9"
            OS: ubuntu-22.04
          - name: Ubuntu (20.04, gcc 10.3.0, open-mpi 4.0.3) - github codespaces
            DOCKER_REPOSITORY: han12/ubuntu20.04-gcc10
            DOCKERFILE: docker/gcc-ubuntu/Dockerfile
            DOCKER_ROOT_IMAGE: mcr.microsoft.com/vscode/devcontainers/base:ubuntu-20.04
            DOCKER_COMPILER_BUILD_ARG: "--build-arg GCC_MAJOR_VERSION=10"
            OS: ubuntu-22.04
          - name: Ubuntu (22.04, gcc 11.2.0, open-mpi 4.1.2)
            DOCKER_ROOT_IMAGE: ubuntu:22.04
            DOCKER_REPOSITORY: han12/ubuntu22.04-gcc11
            DOCKERFILE: docker/gcc-ubuntu/Dockerfile
            DOCKER_COMPILER_BUILD_ARG: "--build-arg GCC_MAJOR_VERSION=11"
            INSTALL_DIR: /opt/GEOSX/GEOSX_TPL-${{ github.event.number }}-${{github.run_number}}-${{ github.sha }}
            OS: ubuntu-22.04
          - name: Ubuntu (20.04, clang 10.0.0 + gcc 9.4.0, open-mpi 4.0.3, cuda-11.2.152)
            DOCKER_REPOSITORY: han12/ubuntu20.04-clang10.0.0-cuda11.2.152
            DOCKERFILE: docker/clang-cuda/Dockerfile
            OS: ubuntu-22.04
          - name: Centos (7.6, gcc 8.3.1, open-mpi 1.10.7, cuda 10.1.243)
            DOCKER_REPOSITORY: han12/centos7.6.1810-gcc8.3.1-cuda10.1.243
            DOCKERFILE: docker/gcc-cuda/Dockerfile
            OS: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        lfs: true

    - name: Set up Docker Buildx
      if: contains(matrix.os, 'ubuntu-22.04')
      uses: docker/setup-buildx-action@v2

    # TODO Add details for pushing to Docker
    #- name: Login to DockerHub
    #  if: contains(matrix.os, 'ubuntu-22.04')
    #  uses: docker/login-action@v2
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USERNAME }}
    #    password: ${{ secrets.DOCKERHUB_TOKEN }}

    # TODO Add details for pushing to Google Cloud
    # - id: 'auth'
    #   if: contains(matrix.os, 'macos-12')
    #   uses: 'google-github-actions/auth@v1'
    #   with:
    #     credentials_json: '${{ secrets.GOOGLE_CLOUD_GCP }}'
    # - name: 'Set up Cloud SDK'
    #   if: contains(matrix.os, 'macos-12')
    #   uses: 'google-github-actions/setup-gcloud@v1'
    #   with:
    #     version: '>= 363.0.0'

    - name: Print environment
      run: printenv

    - name: Run the docker build and push docker script
      env:
        DOCKERFILE: ${{ matrix.DOCKERFILE }}
        DOCKER_REPOSITORY: ${{ matrix.DOCKER_REPOSITORY }}
        DOCKER_COMPILER_BUILD_ARG: ${{ matrix.DOCKER_COMPILER_BUILD_ARG }}
        OS: ${{ matrix.OS }}
        INSTALL_DIR: ${{ matrix.INSTALL_DIR }}
        HOST_CONFIG: ${{ matrix.HOST_CONFIG }}
        DOCKER_ROOT_IMAGE: ${{ matrix.DOCKER_ROOT_IMAGE }}

        # Test PR tag for now
        PULL_REQUEST_NUMBER: Testing
        #PULL_REQUEST_NUMBER: ${{ github.event.number }}
        BUILD_NUMBER: ${{ github.run_number }}
        COMMIT: ${{ github.sha }}
        BUILD_DIR: ${{ github.workspace }}
      run: bash -x ./scripts/docker_build_and_push.sh

  # Debugging
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
